name: Build and Test with SQL Server

on:
  push:
    branches:
      - "**"

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-CU12-ubuntu-20.04
        env:
          SA_PASSWORD: Your!StrongP@ssw0rd123
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
        options: >-
          --memory=3g
          --health-cmd="echo 'SELECT 1' | /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P EventBankingCo_CustomerService_DB_Password -d master"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Install MSBuild for .sqlproj
        uses: microsoft/setup-msbuild@v1.1

      - name: Install SqlPackage
        run: |
          curl -L -o sqlpackage.zip https://aka.ms/sqlpackage-linux
          unzip sqlpackage.zip -d sqlpackage
          chmod +x sqlpackage/sqlpackage
          sudo mv sqlpackage/sqlpackage /usr/local/bin/sqlpackage

      - name: Restore .NET dependencies
        run: dotnet restore

      - name: Build all projects (including .sqlproj)
        run: msbuild CustomerService/EventBankingCo.CustomerService.Database/EventBankingCo.CustomerService.Database.sqlproj /p:Configuration=Release

      - name: Wait for SQL Server to be ready
        run: |
          echo "Waiting for SQL Server to start..."
          for i in {1..30}; do
            /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P EventBankingCo_CustomerService_DB_Password -Q "SELECT 1" && break
            echo "Still waiting..."
            sleep 3
          done

      - name: Deploy DACPAC to SQL Server
        run: |
          sqlpackage /Action:Publish \
            /SourceFile:CustomerService/EventBankingCo.CustomerService.Database/bin/Release/EventBankingCo.CustomerService.Database.dacpac \
            /TargetServerName:localhost \
            /TargetDatabaseName:CustomerService \
            /TargetUser:sa \
            /TargetPassword:EventBankingCo_CustomerService_DB_Password \
            /Quiet

      - name: Run .NET tests
        run: dotnet test --no-build --logger "trx"
