name: Deploy SQL DACPAC and Run Tests

on:
  push:
    branches:
      - '**'

jobs:
  deploy-sql:
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        ports:
          - 1433:1433
        env:
          SA_PASSWORD: Your_password123
          ACCEPT_EULA: "Y"
        options: >-
          --name sqlserver
          --health-cmd="bash -c 'export SA_PASSWORD=Your_password123 && /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P $SA_PASSWORD -Q \"SELECT 1\"'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Install sqlpackage
        run: |
          curl -sSL -o sqlpackage.zip https://aka.ms/sqlpackage-linux
          unzip sqlpackage.zip -d sqlpackage
          sudo mv sqlpackage/sqlpackage /usr/local/bin/
          chmod +x /usr/local/bin/sqlpackage

      - name: Install SQL Server tools (sqlcmd)
        run: |
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools unixodbc-dev
          echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
          source ~/.bashrc

      - name: Wait for SQL Server to be healthy
        run: |
          echo "Waiting for SQL Server container to become healthy..."
          for i in {1..45}; do
            HEALTH=$(docker inspect --format='{{.State.Health.Status}}' sqlserver)
            echo "Attempt $i: SQL Server container health is $HEALTH"
            if [ "$HEALTH" == "healthy" ]; then
              echo "✅ SQL Server is healthy"
              break
            fi
            if [ $i -eq 45 ]; then
              echo "❌ SQL Server did not become healthy in time"
              docker logs sqlserver
              exit 1
            fi
            sleep 5
          done

      - name: Build DACPAC project
        run: dotnet build ./EventBankingCo.CustomerService.Database/EventBankingCo.CustomerService.Database.sqlproj

      - name: Deploy DACPAC to SQL Server
        run: |
          sqlpackage /Action:Publish \
            /SourceFile:"./EventBankingCo.CustomerService.Database/bin/Debug/EventBankingCo.CustomerService.Database.dacpac" \
            /TargetServerName:localhost \
            /TargetUser:sa \
            /TargetPassword:Your_password123 \
            /TargetDatabaseName:CustomerServiceDb \
            /Quiet

      - name: Run post-deployment tests
        run: |
          /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Your_password123 -d CustomerServiceDb -Q "SELECT name FROM sys.tables"
