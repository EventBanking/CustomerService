name: Build and Test with SQL Server

on:
  push:
    branches:
      - "**"

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          SA_PASSWORD: EventBankingCo_CustomerService_DB_Password
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
        options: >-
          --health-cmd="exit 0" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Wait for SQL Server to start
        run: |
          echo "Waiting for SQL Server to be ready..."
          for i in {1..30}; do
            /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P EventBankingCo_CustomerService_DB_Password -Q "SELECT 1" && break
            echo "SQL Server not ready yet ($i)..."
            sleep 3
          done
          
      - name: Install sqlcmd
        run: |
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools unixodbc-dev
          echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
          echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.profile
          source ~/.bashrc

      - name: Run init-db.sql
        working-directory: ./EventBankingCo.CustomerService.Database
        run: |
          /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P EventBankingCo_CustomerService_DB_Password -i ./EventBankingCo.CustomerService.Database/init-db.sql

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Run tests
        run: dotnet test --no-build --logger "trx"

